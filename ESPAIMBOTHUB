local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "ESP-AIMBOT",
    Icon = 0,
    LoadingTitle = "Enjoy!",
    LoadingSubtitle = "by PoppinTums",
    Theme = "Amethyst",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "config"
    },
    Discord = {
        Enabled = true,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = true,
    KeySettings = {
        Title = "ESP-AIMBOT",
        Subtitle = "Have Fun!",
        Note = "Key is Hello",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

local MainTab = Window:CreateTab("Main", 4483362458)
local MiscTab = Window:CreateTab("Misc", 4483362458)
local CredsTab = Window:CreateTab("Credits", 4483362458)

-- Default values for textSize and textColor
local textSize = 20
local textColor = Color3.fromRGB(255, 255, 255)

-- Text Size Slider
local TextSizeSlider = MainTab:CreateSlider({
    Name = "Text Size",
    Range = {10, 40},  -- Set the range of the text size slider
    Increment = 1,     -- Set the increment step to 1
    Suffix = "Size",   -- Label suffix for the slider
    CurrentValue = textSize,
    Flag = "TextSizeSlider",  -- Flag for saving the slider's value
    Callback = function(Value)
        textSize = Value  -- Update textSize with the slider value

        -- Apply updated textSize to ESP labels immediately
        for _, billboard in pairs(game.CoreGui:GetChildren()) do
            if billboard:IsA("BillboardGui") then
                for _, label in pairs(billboard:GetChildren()) do
                    if label:IsA("TextLabel") then
                        label.TextSize = textSize  -- Update TextSize of the label
                    end
                end
            end
        end
    end,
})


-- Color Picker for Text Color
local ColorPicker = MainTab:CreateColorPicker({
    Name = "Text Color",
    Color = textColor,  -- Set default color to white
    Flag = "TextColorPicker",  -- Flag for saving the color value
    Callback = function(Value)
        textColor = Value  -- Update textColor with the color picked

        -- Apply updated textColor to ESP labels
        for _, billboard in pairs(game.CoreGui:GetChildren()) do
            if billboard:IsA("BillboardGui") then
                for _, label in pairs(billboard:GetChildren()) do
                    if label:IsA("TextLabel") then
                        label.TextColor3 = textColor  -- Update TextColor of the label
                    end
                end
            end
        end
    end,
})

-- Speed Change Buttons
local Speed25 = MiscTab:CreateButton({
    Name = "Change Speed - 25",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        humanoid.WalkSpeed = 25
    end,
})

local Speed50 = MiscTab:CreateButton({
    Name = "Change Speed - 50",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        humanoid.WalkSpeed = 50
    end,
})

local SpeedReset = MiscTab:CreateButton({
    Name = "Reset/Change Speed - 18",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        humanoid.WalkSpeed = 18
    end,
})

-- Credits Section
local Creds = CredsTab:CreateButton({
   Name = "Whosvon/PoppinTums",
   Callback = function()
   print("Da King Is Has Arrived")
   end,
})

local CreditsDiscord = CredsTab:CreateButton({
    Name = "Discord - Click To Copy",
    Callback = function()
        setclipboard("https://discord.gg/3vE3JTpbdX")
    end,
})

-- ESP Button
local ESP = MainTab:CreateButton({
    Name = "ESP-Names",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/whosvon/luaTrident/main/ESP"))()

        -- Create ESP Labels for each player
        local function createESPLabel(player)
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
            local billboardGui = Instance.new("BillboardGui")
            billboardGui.Adornee = humanoidRootPart
            billboardGui.Size = UDim2.new(2, 0, 2, 0)
            billboardGui.StudsOffset = Vector3.new(0, 2, 0)
            billboardGui.AlwaysOnTop = true

            local textLabel = Instance.new("TextLabel", billboardGui)
            textLabel.Text = player.Name
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.TextColor3 = textColor  -- Use dynamic text color
            textLabel.TextSize = textSize    -- Use dynamic text size
            textLabel.Font = Enum.Font.SourceSansBold

            billboardGui.Parent = game.CoreGui
        end

        -- Create ESP for all players
        for _, player in pairs(game.Players:GetPlayers()) do
            if player.Character then
                createESPLabel(player)
            end
        end

        -- Listen for new players joining
        game.Players.PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function()
                createESPLabel(player)
            end)
        end)
    end,
})

-- Aimbot Settings
local aimbotEnabled = false
local fovRadius = 100
local smoothness = 0.05

-- Aimbot Toggle
local ToggleAimbot = MainTab:CreateToggle({
    Name = "Enable Aimbot",
    CurrentValue = aimbotEnabled,
    Flag = "AimbotToggle", -- Flag for saving the toggle's state
    Callback = function(Value)
        aimbotEnabled = Value
    end,
})

-- FOV Slider
local FovSlider = MainTab:CreateSlider({
    Name = "FOV Radius",
    Range = {10, 500},
    Increment = 10,
    Suffix = "Units",
    CurrentValue = fovRadius,
    Flag = "FovSlider", -- Flag for saving the slider's value
    Callback = function(Value)
        fovRadius = Value
    end,
})

-- Smoothness Slider
local SmoothnessSlider = MainTab:CreateSlider({
    Name = "Aimbot Smoothness",
    Range = {0.01, 1},
    Increment = 0.01,
    Suffix = "Speed",
    CurrentValue = smoothness,
    Flag = "SmoothnessSlider", -- Flag for saving the slider's value
    Callback = function(Value)
        smoothness = Value
    end,
})

-- Aimbot Lock-On Functionality
local function lockOnHead()
    local camera = workspace.CurrentCamera
    local mousePos = game:GetService("UserInputService"):GetMouseLocation()
    local closestTarget = nil
    local closestDist = math.huge

    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Character and player ~= game.Players.LocalPlayer then
            local head = player.Character:FindFirstChild("Head")
            local humanoid = player.Character:FindFirstChild("Humanoid")
            if head and humanoid then
                local screenPos, onScreen = camera:WorldToViewportPoint(head.Position)
                local dist = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude

                if onScreen and dist < fovRadius and dist < closestDist and isVisible(player) then
                    closestTarget = player
                    closestDist = dist
                end
            end
        end
    end

    if closestTarget then
        local headPos = closestTarget.Character:FindFirstChild("Head").Position
        local humanoidRootPart = closestTarget.Character:FindFirstChild("HumanoidRootPart")
        local humanoid = closestTarget.Character:FindFirstChild("Humanoid")

        if humanoidRootPart and humanoid then
            local velocity = humanoidRootPart.Velocity
            local predictedHeadPos = headPos + velocity * 0.25

            local cameraPos = camera.CFrame.Position
            local direction = (predictedHeadPos - cameraPos).unit

            local targetCFrame = CFrame.new(cameraPos, predictedHeadPos)
            local smoothedCFrame = camera.CFrame:Lerp(targetCFrame, smoothness)

            workspace.CurrentCamera.CFrame = smoothedCFrame
        end
    end
end

-- Right-click to lock on
local isRightClicking = false
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isRightClicking = true
        while isRightClicking do
            if aimbotEnabled then
                lockOnHead()
            end
            wait(0.05)
        end
    end
end)

game:GetService("UserInputService").InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isRightClicking = false
    end
end)

-- Visibility Check Function
function isVisible(player)
    local character = player.Character
    if not character then return false end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return false end

    local camera = workspace.CurrentCamera
    local ray = Ray.new(camera.CFrame.Position, (rootPart.Position - camera.CFrame.Position).unit * 1000)
    local hitPart, hitPos = workspace:FindPartOnRay(ray, game.Players.LocalPlayer.Character)

    return not hitPart or hitPart.Parent == character
end
